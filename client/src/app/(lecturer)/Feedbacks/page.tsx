"use client";

import { useState, useEffect } from "react";
import { Button } from "@/components/ui/button";
import { Dialog, DialogContent, DialogHeader, DialogTitle } from "@/components/ui/dialog";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";

const mockFeedbacks: Feedback[] = [
    {
        _id: "f1",
        type: "ƒê∆°n xin ƒë·ªïi l·ªãch gi·∫£ng d·∫°y",
        content: `K√≠nh g·ª≠i Admin: Do l√Ω do s·ª©c kh·ªèe, t√¥i xin ph√©p ƒë·ªïi l·ªãch d·∫°y m√¥n To√°n 12 l·ªõp BE-201 ng√†y 14/5/2025 sang ng√†y 18/5/2025.
Mong admin h·ªó tr·ª£ x√°c nh·∫≠n v√† c·∫≠p nh·∫≠t tr√™n h·ªá th·ªëng.
Tr√¢n tr·ªçng!
- Nguy·ªÖn VƒÉn Nam (GV To√°n)`,
        createdAt: "13/05/2025",
        status: "ƒê√£ duy·ªát",
        processNote: "Admin ƒë√£ x√°c nh·∫≠n v√† c·∫≠p nh·∫≠t l·ªãch m·ªõi.",
        adminReply: "L·ªãch d·∫°y m·ªõi ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t, th·∫ßy ki·ªÉm tra l·∫°i tr√™n h·ªá th·ªëng nh√©!",
        repliedAt: "14/05/2025 08:15",
        file: "",
    },
    {
        _id: "f2",
        type: "Ph·∫£n √°nh s·ª± c·ªë l·ªõp h·ªçc",
        content: `Th∆∞a admin, ph√≤ng BE-202 s√°ng nay thi·∫øt b·ªã tr√¨nh chi·∫øu kh√¥ng ho·∫°t ƒë·ªông, ·∫£nh h∆∞·ªüng ƒë·∫øn gi·ªù h·ªçc m√¥n Ti·∫øng Anh 12. 
ƒê·ªÅ ngh·ªã b·ªô ph·∫≠n k·ªπ thu·∫≠t ki·ªÉm tra v√† kh·∫Øc ph·ª•c tr∆∞·ªõc bu·ªïi chi·ªÅu.
Xin c·∫£m ∆°n! 
- Tr·∫ßn Th·ªã Hoa (GV Ti·∫øng Anh)`,
        createdAt: "15/05/2025",
        status: "ƒê√£ x·ª≠ l√Ω",
        processNote: "B·ªô ph·∫≠n k·ªπ thu·∫≠t ƒë√£ ti·∫øp nh·∫≠n v√† x·ª≠ l√Ω.",
        adminReply: "S·ª± c·ªë ƒë√£ ƒë∆∞·ª£c kh·∫Øc ph·ª•c xong. C·∫£m ∆°n c√¥ ƒë√£ ph·∫£n √°nh.",
        repliedAt: "15/05/2025 14:20",
        file: "",
    },
    {
        _id: "f3",
        type: "ƒê·ªÅ ngh·ªã x√©t duy·ªát b·ªï sung t√†i li·ªáu m√¥n h·ªçc",
        content: `K√≠nh g·ª≠i admin: T√¥i ƒë·ªÅ ngh·ªã b·ªï sung t√†i li·ªáu tham kh·∫£o m·ªõi cho m√¥n To√°n 12 (b·ªô t√†i li·ªáu PDF ƒë√≠nh k√®m). 
Hy v·ªçng t√†i li·ªáu s·∫Ω h·ªó tr·ª£ t·ªët cho h·ªçc sinh trong k·ª≥ thi s·∫Øp t·ªõi.
Tr√¢n tr·ªçng!
- Nguy·ªÖn VƒÉn Nam`,
        createdAt: "12/05/2025",
        status: "Ch·ªù duy·ªát",
        processNote: "",
        adminReply: "",
        repliedAt: "",
        file: "https://drive.google.com/yourfilelink",
    },
];

export default function FeedbacksPage() {
    // L∆∞u v√†o localStorage
    const [feedbacks, setFeedbacks] = useState<Feedback[]>(() => {
        if (typeof window !== "undefined") {
            const saved = localStorage.getItem("feedbacks");
            if (saved) return JSON.parse(saved);
        }
        return mockFeedbacks;
    });

    const [open, setOpen] = useState(false);
    const [type, setType] = useState("");
    const [content, setContent] = useState("");
    const [filter, setFilter] = useState("");

    // M·ªói khi feedbacks thay ƒë·ªïi, l∆∞u l·∫°i localStorage
    useEffect(() => {
        if (typeof window !== "undefined") {
            localStorage.setItem("feedbacks", JSON.stringify(feedbacks));
        }
    }, [feedbacks]);

    const handleSubmit = () => {
        setFeedbacks(prev => [
            {
                _id: Date.now().toString(),
                type,
                content,
                createdAt: new Date().toLocaleDateString(),
                status: "Ch·ªù duy·ªát",
                processNote: "",
                adminReply: "",
            },
            ...prev,
        ]);
        setType("");
        setContent("");
        setOpen(false);
    };

    const getStatusTextColor = (status: string) => {
        if (status.includes("Ch·ªù")) return "text-yellow-600 font-semibold";
        if (status.includes("duy·ªát")) return "text-green-600 font-semibold";
        if (status.includes("x·ª≠ l√Ω")) return "text-blue-600 font-semibold";
        if (status.includes("T·ª´ ch·ªëi")) return "text-red-600 font-semibold";
        return "text-gray-700";
    };

    // L·ªçc theo t·ª´ kho√°
    const filteredFeedbacks = feedbacks.filter((f) =>
        (f.type + f.content + f.status + f.processNote + (f.adminReply || "")).toLowerCase().includes(filter.toLowerCase())
    );

    return (
        <div className="p-6">
            <h1 className="text-2xl font-bold mb-4">üìã Ph·∫£n h·ªìi & ƒê∆°n t·ª´</h1>

            <div className="flex flex-col sm:flex-row justify-between mb-3 gap-2">
                <Button onClick={() => setOpen(true)}>+ G·ª≠i ph·∫£n h·ªìi m·ªõi</Button>
                <Input
                    className="sm:max-w-xs"
                    placeholder="T√¨m ki·∫øm nhanh..."
                    value={filter}
                    onChange={e => setFilter(e.target.value)}
                />
            </div>

            <div className="overflow-auto rounded-lg border">
                <table className="w-full text-sm">
                    <thead className="bg-gray-100 text-left font-semibold">
                        <tr>
                            <th className="p-3">Lo·∫°i</th>
                            <th className="p-3">N·ªôi dung ph·∫£n h·ªìi</th>
                            <th className="p-3">Ng√†y g·ª≠i</th>
                            <th className="p-3">Ghi ch√∫ x·ª≠ l√Ω</th>
                            <th className="p-3">Tr·∫°ng th√°i</th>
                            <th className="p-3">Ph·∫£n h·ªìi t·ª´ admin</th>
                            <th className="p-3">Ng√†y tr·∫£ l·ªùi</th>
                        </tr>
                    </thead>
                    <tbody>
                        {filteredFeedbacks.length ? filteredFeedbacks.map((f) => (
                            <tr key={f._id} className="border-t">
                                <td className="p-3">{f.type}</td>
                                <td className="p-3 max-w-[360px] whitespace-pre-line">{f.content}</td>
                                <td className="p-3">{f.createdAt}</td>
                                <td className="p-3">{f.processNote}</td>
                                <td className={`p-3 ${getStatusTextColor(f.status)}`}>
                                    {f.status}
                                </td>
                                <td className="p-3 max-w-[320px] whitespace-pre-line">
                                    {f.adminReply ? (
                                        <span className="text-green-600">{f.adminReply}</span>
                                    ) : (
                                        <span className="italic text-gray-400">Ch∆∞a c√≥ ph·∫£n h·ªìi</span>
                                    )}
                                </td>
                                <td className="p-3">{f.repliedAt || "--"}</td>
                            </tr>
                        )) : (
                            <tr>
                                <td colSpan={7} className="p-3 text-center text-gray-500 italic">
                                    Kh√¥ng c√≥ k·∫øt qu·∫£ ph√π h·ª£p.
                                </td>
                            </tr>
                        )}
                    </tbody>
                </table>
            </div>

            {/* Modal g·ª≠i ph·∫£n h·ªìi */}
            <Dialog open={open} onOpenChange={setOpen}>
                <DialogContent>
                    <DialogHeader>
                        <DialogTitle>G·ª≠i ph·∫£n h·ªìi / ƒê∆°n t·ª´ m·ªõi</DialogTitle>
                    </DialogHeader>
                    <div className="space-y-4">
                        <Input
                            placeholder="Lo·∫°i ƒë∆°n, v√≠ d·ª•: ƒêƒÉng k√Ω, Khi·∫øu n·∫°i, ... "
                            value={type}
                            onChange={e => setType(e.target.value)}
                        />
                        <Textarea
                            placeholder="Nh·∫≠p n·ªôi dung ph·∫£n h·ªìi ho·∫∑c ƒë∆°n t·ª´..."
                            value={content}
                            onChange={e => setContent(e.target.value)}
                            rows={5}
                        />
                        <div className="flex justify-end gap-2">
                            <Button variant="ghost" onClick={() => setOpen(false)}>H·ªßy</Button>
                            <Button onClick={handleSubmit} disabled={!type || !content}>G·ª≠i</Button>
                        </div>
                    </div>
                </DialogContent>
            </Dialog>
        </div>
    );
}

// ƒê·ª´ng qu√™n khai b√°o Feedback interface ho·∫∑c import n·∫øu t√°ch file
interface Feedback {
    _id: string;
    type: string;
    content: string;
    createdAt: string;
    status: string;
    processNote: string;
    adminReply?: string;
    repliedAt?: string;
    file?: string;
}
