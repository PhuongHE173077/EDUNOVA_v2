// app/(student)/video-recorder/page.tsx

"use client";

import { useState } from "react";
import { VideoRecord } from "@/types";
import VideoCard from "./VideoCard";

const dummyVideos: VideoRecord[] = [
  {
    _id: "v1",
    courseId: "C001",
    title: "Bu·ªïi 1 - Gi·ªõi thi·ªáu m√¥n To√°n cao c·∫•p",
    description: "T·ªïng quan m√¥n h·ªçc, ph∆∞∆°ng ph√°p h·ªçc v√† b√†i t·∫≠p.",
    url: "https://www.youtube.com/embed/dQw4w9WgXcQ",
    createdAt: new Date("2025-05-10T10:00:00"),
    type: "youtube",
  },
  {
    _id: "v2",
    courseId: "C003",
    title: "Bu·ªïi 2 - L·∫≠p tr√¨nh v·ªõi React",
    description: "Gi·ªõi thi·ªáu component, props, state trong React.",
    url: "https://www.youtube.com/embed/Ke90Tje7VS0",
    createdAt: new Date("2025-05-11T13:30:00"),
    type: "youtube",
  },
  {
    _id: "v3",
    courseId: "C004",
    title: "Bu·ªïi 1 - V·∫≠t l√Ω ƒë·∫°i c∆∞∆°ng: C∆° h·ªçc c∆° b·∫£n",
    description: "ƒê·ªãnh lu·∫≠t Newton, chuy·ªÉn ƒë·ªông th·∫≥ng, gia t·ªëc.",
    url: "https://www.youtube.com/embed/1AxTCZKaAjY",
    createdAt: new Date("2025-05-12T09:00:00"),
    type: "youtube",
  },
  {
    _id: "v4",
    courseId: "C005",
    title: "Bu·ªïi 1 - L·ªãch s·ª≠ vƒÉn minh th·∫ø gi·ªõi: Ai C·∫≠p c·ªï ƒë·∫°i",
    description: "N·ªÅn vƒÉn minh s√¥ng Nile v√† nh·ªØng ƒëi·ªÅu huy·ªÅn b√≠.",
    url: "https://www.youtube.com/embed/lrYx7HaUlMY",
    createdAt: new Date("2025-05-13T14:00:00"),
    type: "youtube",
  },
  {
    _id: "v5",
    courseId: "C002",
    title: "Bu·ªïi 3 - Ti·∫øng Anh chuy√™n ng√†nh: Writing",
    description: "C√°ch vi·∫øt b√°o c√°o k·ªπ thu·∫≠t v√† lu·∫≠n vƒÉn khoa h·ªçc.",
    url: "https://www.youtube.com/embed/ScMzIvxBSi4",
    createdAt: new Date("2025-05-14T10:30:00"),
    type: "youtube",
  },
  {
    _id: "v6",
    courseId: "C003",
    title: "Bu·ªïi 4 - L·∫≠p tr√¨nh v·ªõi React: Hooks c∆° b·∫£n",
    description: "useState, useEffect v√† c√°ch qu·∫£n l√Ω d·ªØ li·ªáu.",
    url: "https://www.youtube.com/embed/f687hBjwFcM",
    createdAt: new Date("2025-05-15T08:15:00"),
    type: "youtube",
  },
  {
    _id: "v7",
    courseId: "C001",
    title: "Bu·ªïi 2 - To√°n cao c·∫•p: Gi·∫£i t√≠ch 1 chi·ªÅu",
    description: "ƒê·∫°o h√†m, t√≠ch ph√¢n v√† ·ª©ng d·ª•ng.",
    url: "https://www.youtube.com/embed/zOjov-2OZ0E",
    createdAt: new Date("2025-05-16T13:00:00"),
    type: "youtube",
  },
  {
    _id: "v8",
    courseId: "C005",
    title: "Bu·ªïi 2 - VƒÉn minh ph∆∞∆°ng T√¢y: Hy L·∫°p c·ªï ƒë·∫°i",
    description: "Th√†nh bang, th·∫ßn tho·∫°i, n·ªÅn d√¢n ch·ªß ƒë·∫ßu ti√™n.",
    url: "https://www.youtube.com/embed/PYyAXYRIymY",
    createdAt: new Date("2025-05-17T15:45:00"),
    type: "youtube",
  },
  {
    _id: "v9",
    courseId: "C004",
    title: "Bu·ªïi 2 - V·∫≠t l√Ω: ƒê·ªông l·ª±c h·ªçc v√† ma s√°t",
    description: "Ma s√°t tr∆∞·ª£t, th·∫ø nƒÉng, b·∫£o to√†n c∆° nƒÉng.",
    url: "https://www.youtube.com/embed/Iwpi1Lm6dFo",
    createdAt: new Date("2025-05-18T09:30:00"),
    type: "youtube",
  },
  {
    _id: "v10",
    courseId: "C002",
    title: "Bu·ªïi 4 - Speaking Practice: Business English",
    description: "Th·ª±c h√†nh h·ªôi tho·∫°i trong m√¥i tr∆∞·ªùng c√¥ng s·ªü.",
    url: "https://www.youtube.com/embed/E7wJTI-1dvQ",
    createdAt: new Date("2025-05-19T11:00:00"),
    type: "youtube",
  },
];

const subjectMap: Record<string, string> = {
  C001: "To√°n cao c·∫•p",
  C002: "Ti·∫øng Anh chuy√™n ng√†nh",
  C003: "L·∫≠p tr√¨nh Web",
  C004: "V·∫≠t l√Ω ƒë·∫°i c∆∞∆°ng",
  C005: "L·ªãch s·ª≠ vƒÉn minh",
};

export default function VideoRecorderPage() {
  const [selectedSubject, setSelectedSubject] = useState("all");
  const [searchText, setSearchText] = useState("");

  const filteredVideos = dummyVideos.filter((v) => {
    const matchSubject =
      selectedSubject === "all" || v.courseId === selectedSubject;
    const matchText = v.title
      .toLowerCase()
      .includes(searchText.trim().toLowerCase());
    return matchSubject && matchText;
  });

  return (
    <div className="p-6 min-h-screen bg-gray-50">
      <h1 className="text-2xl font-bold mb-6">üìπ Video c√°c bu·ªïi h·ªçc</h1>

      <div className="flex flex-col md:flex-row gap-4 mb-6">
        <select
          className="border rounded-lg px-3 py-2 text-sm outline-none focus:ring-2 ring-indigo-400"
          value={selectedSubject}
          onChange={(e) => setSelectedSubject(e.target.value)}
        >
          <option value="all">T·∫•t c·∫£ m√¥n h·ªçc</option>
          {Object.entries(subjectMap).map(([id, name]) => (
            <option key={id} value={id}>
              {name}
            </option>
          ))}
        </select>

        <input
          type="text"
          placeholder="üîç T√¨m ki·∫øm ti√™u ƒë·ªÅ video..."
          className="flex-1 border rounded-lg px-3 py-2 text-sm outline-none focus:ring-2 ring-indigo-400"
          value={searchText}
          onChange={(e) => setSearchText(e.target.value)}
        />
      </div>

      {filteredVideos.length === 0 ? (
        <p className="text-sm text-gray-500 italic">Kh√¥ng c√≥ video ph√π h·ª£p.</p>
      ) : (
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {filteredVideos.map((video) => (
            <VideoCard key={video._id} video={video} />
          ))}
        </div>
      )}
    </div>
  );
}
